#https://www.jonathanmedd.net/2019/07/returning-data-from-powershell-scripts-to-be-consumed-by-ansible-playbooks.html

# Check if module exists. If it does not, exit and return message
if (!(Get-Module -ListAvailable -Name ActiveDirectory)) { return  "Module does not exist" }

# List of folders with user details
$listOfObj = New-Object -TypeName 'System.Collections.ArrayList';

#Excluded folders. These folders will not be checked
$excludedFolders = @(
  "All Users",
  "Administrator",
  "Default",
  "Public",
  "Default User"
)

# Create main object to reurn
$server = @{}

# Get host name
$server.hostname = $env:computername

# Get free space on server
$server.freespace = [int](Get-CimInstance -ClassName Win32_LogicalDisk -Filter 'DeviceId = "C:"' | Select @{'Name' = 'FreeSpace'; Expression= { [int]($_.FreeSpace / 1GB) }} | Select FreeSpace -ExpandProperty FreeSpace -first 1)

# Get total size
$server.total_size =  [int](Get-CimInstance -ClassName Win32_LogicalDisk -Filter 'DeviceId = "C:"' | Select @{'Name' = 'Size'; Expression= { [int]($_.Size / 1GB) }} | Select Size -ExpandProperty Size -first 1)

# Get percentage of server space free
$server.percent_free = [string](get-psdrive c | % { $_.free/($_.used + $_.free) } | % tostring p)

# This gets the current time as a string that can be compared to the time returned from AD
$dateTwoMonthsAgo = ((Get-Date).AddMonths(-2)).tofiletime()
# Write-Host "Date two months ago (Windows timestamp): " $dateTwoMonthsAgo

# Get folder size and name
gci -force 'C:\Users'-ErrorAction SilentlyContinue |
Where-Object { $_.Name -notin $excludedFolders } |
? { $_ -is [io.directoryinfo] } | % {
  $len = 0
  gci -recurse -force $_.fullname -ErrorAction SilentlyContinue | % { $len += $_.length }
  
  $folder = @{}
  $folder.folderName = $_.Name
  $folder.Name = $_.Name
  $folder.fullAddress = $_.fullname
  $folder.folderSize = $len
  [void]$listOfObj.Add($folder)
}

# Loop through list of folders
foreach ($i in $listOfObj) {
  # Get user that matches the folder name
  Get-ADUser -Filter "SamAccountName -eq '$($i.folderName)'" -Properties * <#-SearchBase "DC=AppNC"#> | % {
    $i.enabled = $_.Enabled
    $i.emailAddress = $_.mail
    $i.lastLogonDate = [string]$_.lastLogonDate
    # $i.lastLogonDateUnixTimeSeconds = $_.lastLogonDate.ToUnixTimeSeconds()
    $i.lastLogonTimestamp = $_.lastLogonTimestamp
  }
    
  # Give summary of whether user profile can be deleted
  if (
  ($i.lastLogonTimestamp -lt $dateTwoMonthsAgo) -and    # - Checks if last logon was longer than 2 months ago
  ($i.lastLogonTimestamp -ne $null) -and                # - Checks last logon is not null (a number)
  ($i.enabled -eq "False")                              # - Checks enabled is "False"
  ) {
    $i.to_delete = $true 
  }
  else {
    $i.to_delete = $false 
  }
}

$server.folders = $listOfObj

# Output response as json
# https://www.jonathanmedd.net/2019/07/returning-data-from-powershell-scripts-to-be-consumed-by-ansible-playbook
$vmJson = $server | ConvertTo-Json
Write-Output $vmJson
